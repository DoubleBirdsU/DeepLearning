# Hyperparameters for training

giou: 3.54  # giou loss gain
cls: 37.4  # cls loss gain
cls_pw: 1.0  # cls BCELoss positive_weight
obj: 64.3  # obj loss gain (*=img_size/320 if img_size != 320)
obj_pw: 1.0  # obj BCELoss positive_weight
iou_t: 0.20  # iou training threshold
lr0: 0.001  # initial learning rate (SGD=5E-3 Adam=5E-4)
lrf: 0.01  # final OneCycleLR learning rate (lr0 * lrf)
momentum: 0.937  # SGD momentum
weight_decay: 0.0005  # optimizer weight decay
fl_gamma: 0.0  # focal loss gamma (efficientDet default is gamma=1.5)
hsv_h: 0.0138  # image HSV-Hue augmentation (fraction)
hsv_s: 0.678  # image HSV-Saturation augmentation (fraction)
hsv_v: 0.36  # image HSV-Value augmentation (fraction)
degrees: 0.  # image rotation (+/- deg)
translate: 0.  # image translation (+/- fraction)
scale: 0.  # image scale (+/- gain)
shear: 0.  # image shear (+/- deg)

net_name: SSD_SPP
num_cls: 21
img_size: [3, 300, 300]


backbone:  # ResNet50: [3, 4, 6, 3] ResBlockB
  # from, number, module, args
  [
    [-1, 1, ConvSameBnRelu2D, [64, 7, 2]],
    [-1, 1, MaxPool2D, [3, 2, 'same']],

    # 3
    [-1, 1, ConvSameBnRelu2D, [64, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [64, 3, 2]],
    [-1, 1, ConvSameBnRelu2D, [256, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [256, 3, 'conv', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [256, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [64, 3, 2]],
    [-1, 1, ConvSameBnRelu2D, [256, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [256, 1, 'equal', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [256, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [64, 3, 2]],
    [-1, 1, ConvSameBnRelu2D, [256, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [256, 1, 'pool', 'relu']],

    # 4
    [-1, 1, ConvSameBnRelu2D, [256, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [128, 3, 1]],
    [-1, 1, ConvSameBnRelu2D, [256, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [256, 1, 'conv', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [256, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [128, 3, 1]],
    [-1, 1, ConvSameBnRelu2D, [256, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [256, 1, 'equal', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [256, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [128, 3, 1]],
    [-1, 1, ConvSameBnRelu2D, [256, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [256, 1, 'equal', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [256, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [128, 3, 2]],
    [-1, 1, ConvSameBnRelu2D, [512, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [512, 1, 'pool', 'relu']],

    # 6
    [-1, 1, ConvSameBnRelu2D, [512, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [256, 3, 1]],
    [-1, 1, ConvSameBnRelu2D, [512, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [512, 1, 'conv', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [512, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [256, 3, 1]],
    [-1, 1, ConvSameBnRelu2D, [512, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [512, 1, 'equal', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [512, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [256, 3, 1]],
    [-1, 1, ConvSameBnRelu2D, [512, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [512, 1, 'equal', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [512, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [256, 3, 1]],
    [-1, 1, ConvSameBnRelu2D, [512, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [512, 1, 'equal', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [512, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [256, 3, 1]],
    [-1, 1, ConvSameBnRelu2D, [512, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [512, 1, 'equal', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [512, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [256, 3, 2]],
    [-1, 1, ConvSameBnRelu2D, [1024, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [1024, 1, 'pool', 'relu']],

    [-1, 1, RoI, [38, 38]],

    # 3
    [-1, 1, ConvSameBnRelu2D, [1024, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [512, 3, 1]],
    [-1, 1, ConvSameBnRelu2D, [1024, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [1024, 1, 'conv', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [1024, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [512, 3, 1]],
    [-1, 1, ConvSameBnRelu2D, [1024, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [1024, 1, 'equal', 'relu']],

    [-1, 1, ConvSameBnRelu2D, [1024, 1, 1]],
    [-1, 1, ConvSameBnRelu2D, [512, 3, 2]],
    [-1, 1, ConvSameBnRelu2D, [2048, 1, 1, 'same', 'valid']],
    [[-4, -1], 1, Shortcut, [2048, 1, 'pool', 'relu']],
  ]

head:
  [
    [-13, 1, SSDClassifier, [1024, num_cls, 4]],

    [-2, 1, SSDBlock, [1024, 1024, 1, [3, 1]]],
    [-1, 1, SSDClassifier, [1024, num_cls, 6]],

    [-2, 1, SSDBlock, [512, 256, 2]],
    [-1, 1, SSDClassifier, [512, num_cls, 6]],

    [-2, 1, SSDBlock, [256, 128, 2]],
    [-1, 1, SSDClassifier, [256, num_cls, 6]],

    [-2, 1, SSDBlock, [256, 128, 2]],
    [-1, 1, SSDClassifier, [256, num_cls, 4]],

    [-2, 1, SSDBlock, [256, 128, 2]],
    [-1, 1, SSDClassifier, [256, num_cls, 4]],

    [[-11, -9, -7, -5, -3, -1], 1, Concat, 2]
  ]
